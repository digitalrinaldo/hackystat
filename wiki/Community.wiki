#summary Examples of Hackystat usage by the software development community

Since 2001, Hackystat has been used by a variety of research and industrial organizations to better understand software development.  Here are some examples of Hackystat use by the software development community.

|| *Organization*  || *Collaborators* || *Description* ||
|| [http://www.cs.umd.edu/projects/SoftEng/ESEG/ University of Maryland,  Experimental Software Engineering Group] || Victor Basili, Marvin Zelkowitz || Performed a variety of experiments on programmer productivity as part of the [http://www.cs.umd.edu/projects/SoftEng/ESEG/hpcs/ HPCS Development Time Working Group].  Used Hackystat to record developer activities within editors and at the command line, and integrated Hackystat into their UMDInst toolset.  Example publication: [http://hpcs.cs.umd.edu/fileadmin/papers/fse-esec05.pdf Combining Self-reported and Automatic Data to Improve Programming Effort Measurement], Lorin Hochstein, Victor R. Basili, Marvin V. Zelkowitz, Jeffrey K. Hollingsworth, Jeffrey Carver, Foundations of Software Engineering, 2005. ||
|| Sun Microsystems,  HPCS Productity Team || Larry Votta, Michael Van De Vanter, Susan Squires || Performed research to understand productivity issues in high performance computing systems as part of the DARPA HPCS program.  Investigated integration of qualitative data collected manually through programmer diaries with quantitative data collected automatically by Hackystat. Example publication: [http://www.ctwatch.org/quarterly/articles/2006/11/software-productivity-research-in-high-performance-computing/ Software Productivity Research in High Performance Computing], Susan Squires, Michael Van De Vanter, Lawrence Votta, CTWatch Quarterly, November, 2006. ||
|| [http://www.sintef.no SINTEF], Information and Communication Technology Division || Geir Hanssen || Performed a pilot case study on the use of the Zorro system to support technology transfer and adoption of Test Driven Design practices. (No publication available yet.) ||
|| [http://www.6thsenseanalytics.com/ 6th Sense Analytics] || Todd Olson, Greg Burnell || Used Hackystat as a technology basis for a commercial offering involving sensor-based acquisition of software developer behaviors.  White Paper: [http://www.6thsenseanalytics.com/wp-content/assets/pdfs/6thSenseMetrics.pdf 6th Sense Metrics Overview]. ||
|| [http://iit-iti.nrc-cnrc.gc.ca/about-sujet/seg-ggl_e.html NRC Institute for Information Technology, Software Engineering Group] || Hakan Erdogmus || Performed research on inference rules for automated detection of Test Driven Design practices. Presentation slides using Hackystat visualizations of TDD: [http://softlab.boun.edu.tr/files/seminars/tdd.pdf An Overview of Test-Driven Development], October, 2007. ||
|| [http://softeng.polito.it/ Politecnico di Torino, Software Engineering Group] || Maurizio Morisio || Used Hackystat to instrument a classroom setting in order to provide quantative data on testing behavior and its relationship to software quality. Example publication: [http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=1357918 Assessing quantitatively a programming course], M. Morisio, M. Torchiano, G. Argentieri, 10th International Symposium on Software Metrics, 2004.  ||
|| [http://wwwagse.informatik.uni-kl.de University of Kaiserslautern, Software Engineering Processes and Measurement Group] || Dieter Rombach, Marcus Ciolkowski, Christoph Lofi || Performed research on the use of Hackystat to create a "continuous" approach to the Goal-Question-Metric paradigm in which the satisfaction of the GQM network can be evaluated in real-time, and trends in the level of satisfaction can be measured over time. Example publication: [http://csdl.ics.hawaii.edu/techreports/05-09/05-09.pdf Continuous GQM: An automated framework for the Goal-Question-Metric paradigm], Christoph Lofi, Department of Software Engineering, Fachbereich Informatik, Universitat Kaiserslautern, Germany, M.S. Thesis, Number CSDL-05-09, August, 2005 ||
|| [http://www.jpl.nasa.gov/index.cfm Jet Propulsion Laboratory, Mission Data System Project] || Kenny Meyer || Used Hackystat to instrument and analyze the build system process and outcomes for the Mission Data System project.  Example publication: [http://csdl.ics.hawaii.edu/techreports/03-07/03-07.html The Hackystat-JPL configuration: Overview and Initial Results], Philip M. Johnson, Department of Information and Computer Sciences, University of Hawaii, Honolulu, Hawaii 96822, Number CSDL-03-07, October, 2003. ||
|| [http://csdl.ics.hawaii.edu University of Hawaii, Collaborative Software Development Laboratory] || Philip Johnson || Integrated Hackystat into the software engineering curriculum to provide empirical guidance in adoption and improvement of software development techniques.  Example publication: [http://csdl.ics.hawaii.edu/techreports/03-12/03-12.pdf Practical automated process and product metric collection and analysis in a classroom setting: Lessons learned from Hackystat-UH], Philip M. Johnson and Hongbing Kou and Joy M. Agustin and Qin Zhang and Aaron Kagawa and Takuya Yamashita, Proceedings of the 2004 International Symposium on Empirical Software Engineering, Los Angeles, California, August, 2004. ||

If you would like to contribute your own Hackystat use experience to this page, or update one of the ones above, please email Philip Johnson (johnson@hawaii.edu) with your additions or enhancements. 
