#summary The standard structure for Sensor Data Types

= Introduction =

Hackystat sensor data includes a field called "!SensorDataType", which, as its name implies, indicates the "type" of sensor data.  The meaning of "type" in this context is an expectation about the kinds of key-value pairs that will be supplied by sensors when generating sensor data instances of the given type, along with an expectation about the way these key-value pairs will be interpreted by higher level analyses. 

The goal of this page is to document these expectations so that developers of sensors can generate data that can be meaningfully and consistently interpreted by higher level analyses on that data. 

= Standard Sensor Data Fields =

Every sensor data instance contains the following standard fields:

|| *Property*  || *Example* || *Description* ||
|| Timestamp || 2007-11-07T09:11:12.247-10:00 || The time instant at which the data was collected from the tool or user, in xs:dateTime (or XMLGregorianCalendar) format. ||
|| Runtime   || 2007-11-07T09:11:12.247-10:00 || When multiple sensor data instances should be aggregated together, this timestamp value can be used to indicate which sensor data instances belong to a single collection. For example, consider a size tool that generates one sensor data instance per file.  The sensor for this size tool should supply the same Runtime timestamp for each sensor data instance generated during a single run of the size tool over the system.  ||
|| !SensorDataType || !DevEvent || A string indicating the "type" of data. ||
|| Resource || file:/C:/svn-google/sensordata.xsd || A URI indicating the artifact from which the sensor data was generated.  ||
|| Owner || johnson@hawaii.edu || The account associated with the owner of this sensor data. Note that while tools will send this data as a simple email address, the !SensorBase will return the contents of this property as a RESTful URI, such as http://dasha.ics.hawaii.edu:9876/sensorbase/users/johnson@hawaii.edu ||
|| Tool || Eclipse || The name of the tool that generated this data. ||

In addition to these standard fields, sensor data instances can also include a list of key-value string pairs.  As a list, it is possible (and in some cases desirable) to have the same key appear multiple times in this list. These "properties" of a Sensor Data instance allow type-specific information to be provided. 

The following sections indicate for each Sensor Data Type the expected (and in some cases) the optional properties that sensors should provide when generating data, and the way this data should be interpreted by higher level analyses. 


= !DevEvent =

The !DevEvent sensor data type represents developer "behavioral events",
such as the action of invoking the compiler, or opening a file for editing,
or running a unit test, and so forth. 

== Expected properties ==

None.

== Optional properties ==

Sensors may add additional properties for more specialized analyses.  For example, the [http://code.google.com/p/hackystat-sensor-eclipse/ Eclipse sensor] provides properties to support test-driven design as documented in its [http://code.google.com/p/hackystat-sensor-eclipse/wiki/UserGuide User Guide].

= !UnitTest =

The UnitTest sensor data type represents the outcome of single unit test invocation on a source file.

== Expected properties ==

|| *Key* || *Value* || *Description* ||
|| Result || "pass" or "fail" || Whether the unit test passed or failed. ||

== Optional properties == 

|| *Key* || *Value* || *Description* ||
|| ElapsedTime || 23456 || The elapsed time for the test, in milliseconds. ||
|| TestName || TestFoo || The name of the test. ||
|| TestCaseName || testFoo || The name of the individual test case. ||
|| FailureString || Expected 3, was 2 || The failure string. ||
|| ErrorString || Null pointer exception || The exception message. ||










